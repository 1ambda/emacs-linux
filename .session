;;; Automatically generated on Fri Apr 25 13:20:42 2014
;;; Invoked by anster@labtop-virtual using 24.3.1
(setq-default session-file-alist '(("~/.emacs.d/setup/setup-ido.el" 76 517 1 nil nil 542 (overwrite-mode)) ("~/Dropbox/Todo/List.org" 119 nil 1 nil nil 119 (overwrite-mode)) ("~/.emacs.d/init.el" 904 nil 1 nil nil 527 (overwrite-mode))))
(setq-default file-name-history '("~/.emacs.d/setup/setup-ido.el" "~/Dropbox/Todo/List.org" "~/.emacs.d/init.el" #("/home/anster/.emacs.d/setup/setup-ido.el" 22 28 (face flx-highlight-face) 34 37 (face flx-highlight-face)) #("/home/anster/.emacs.d/init.el" 13 22 (face flx-highlight-face) 22 25 (face flx-highlight-face)) #("/home/anster/.emacs.d/setup/setup-evil.el" 13 22 (face flx-highlight-face) 22 25 (face flx-highlight-face) 34 36 (face flx-highlight-face)) #("/home/anster/.emacs.d/setup/setup-session.el" 22 28 (face flx-highlight-face) 34 38 (face flx-highlight-face))))
(setq-default search-ring '("3"))
(setq-default regexp-search-ring '("'"))
(setq-default buffer-name-history '("List.org" "*Open Recent*" "ini" "*Shell Command Output*" "*Messages*"))
(setq-default command-history '((evil-delete 519 543 (quote line) nil nil) (evil-delete 364 375 (quote inclusive) nil nil) (evil-find-char-to nil 34) (evil-change 222 258 (quote line) nil nil) (evil-change 241 258 (quote line) nil nil) (evil-delete 241 242 (quote line) nil nil) (evil-delete 258 259 (quote line) nil nil) (evil-delete 388 397 (quote exclusive) nil nil) (evil-delete 378 396 (quote inclusive) nil nil) (evil-find-char-to nil 41) (switch-to-buffer "List.org") (kill-buffer "*Open Recent*") (describe-key "" 1 nil) (describe-key "" 1 nil) (evil-delete 315 333 (quote line) nil nil) (find-file #("/home/anster/.emacs.d/setup/setup-ido.el" 22 28 ... 34 37 ...)) (find-file #("/home/anster/.emacs.d/init.el" 13 22 ... 22 25 ...)) (kill-buffer "ini") (find-file #("/home/anster/.emacs.d/setup/setup-evil.el" 13 22 ... 22 25 ... 34 36 ...)) (evil-find-char-to-backward nil 125) (ace-jump-word-mode 57) (find-file #("/home/anster/.emacs.d/setup/setup-session.el" 22 28 ... 34 38 ...)) (kill-buffer "*Shell Command Output*") (switch-to-buffer "*Shell Command Output*") (kill-buffer "*Messages*") (switch-to-buffer "*Messages*")))
(setq-default evil-ex-history '(#("45" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("d" 0 1 (ex-index 1))))
(setq-default helm-c-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar \.\.\. command-history)) (type . sexp)))
(setq-default helm-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" . helm-find-many-files) ("Find file as root" . helm-find-file-as-root) ("Find file other window" . find-file-other-window) ("Find file other frame" . find-file-other-frame) ("Open dired in file's directory" . helm-open-dired) ("Grep File(s) `C-u recurse'" . helm-find-files-grep) ("Zgrep File(s) `C-u Recurse'" . helm-ff-zgrep) ("Pdfgrep File(s)" . helm-ff-pdfgrep) ("Insert as org link" . helm-files-insert-as-org-link) ("Checksum File" . helm-ff-checksum) ("Ediff File" . helm-find-files-ediff-files) ("Ediff Merge File" . helm-find-files-ediff-merge-files) ("Etags `M-., C-u tap, C-u C-u reload tag file'" . helm-ff-etags-select) ("View file" . view-file) ("Insert file" . insert-file) ("Delete file(s)" . helm-delete-marked-files) ("Open file externally (C-u to choose)" . helm-open-file-externally) ("Open file with default tool" . helm-open-file-with-default-tool) ("Find file in hex dump" . hexl-find-file))))
(setq-default helm-c-source-minibuffer-history '((name . "Minibuffer History") (header-name lambda (name) (format "%s (%s)" name minibuffer-history-variable)) (candidates lambda nil (let \.\.\. \.\.\.)) (migemo) (multiline) (action lambda (candidate) (delete-minibuffer-contents) (insert candidate))))
(setq-default helm-ff-history '("/home/anster/"))
(setq-default helm-source--ff-file-name-history '((name . "File name history") (init lambda nil (with-helm-alive-p \.\.\.)) (candidates lambda nil (if helm-ff-file-name-history-use-recentf recentf-list file-name-history)) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" lambda \.\.\. \.\.\. \.\.\.) ("Find file in helm" lambda \.\.\. \.\.\.))))
(setq-default helm-source-comint-input-ring '((name . "Comint history") (candidates lambda nil (with-helm-current-buffer \.\.\.)) (action . helm-comint-input-ring-action)))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar \.\.\. command-history)) (type . sexp)))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" . helm-find-many-files) ("Find file as root" . helm-find-file-as-root) ("Find file other window" . find-file-other-window) ("Find file other frame" . find-file-other-frame) ("Open dired in file's directory" . helm-open-dired) ("Grep File(s) `C-u recurse'" . helm-find-files-grep) ("Zgrep File(s) `C-u Recurse'" . helm-ff-zgrep) ("Pdfgrep File(s)" . helm-ff-pdfgrep) ("Insert as org link" . helm-files-insert-as-org-link) ("Checksum File" . helm-ff-checksum) ("Ediff File" . helm-find-files-ediff-files) ("Ediff Merge File" . helm-find-files-ediff-merge-files) ("Etags `M-., C-u tap, C-u C-u reload tag file'" . helm-ff-etags-select) ("View file" . view-file) ("Insert file" . insert-file) ("Delete file(s)" . helm-delete-marked-files) ("Open file externally (C-u to choose)" . helm-open-file-externally) ("Open file with default tool" . helm-open-file-with-default-tool) ("Find file in hex dump" . hexl-find-file))))
(setq-default helm-source-minibuffer-history '((name . "Minibuffer History") (header-name lambda (name) (format "%s (%s)" name minibuffer-history-variable)) (candidates lambda nil (let \.\.\. \.\.\.)) (migemo) (multiline) (action lambda (candidate) (delete-minibuffer-contents) (insert candidate))))
(setq-default ido-buffer-history '("List.org" "*Open Recent*" "ini" "*Shell Command Output*" "*Messages*"))
(setq-default ido-file-history '(#("setup-ido.el" 6 9 (face flx-highlight-face)) #("init.el" 0 3 (face flx-highlight-face)) #("setup-evil.el" 6 8 (face flx-highlight-face)) #("setup-session.el" 6 10 (face flx-highlight-face))))
(setq-default minibuffer-history '("setup" "se" "ini"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default smex-history '(package-install helm-for-files eshell smex ido-find-file ido-display-file ido-display-buffer))
